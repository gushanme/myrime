# Rime schema
# encoding: utf-8

# 方案说明

schema:
  schema_id: rime_me
  name: 自己拼音
  version: "2024-07-17"
  author:
    - Local
  description: |
    自己拼音
    由自己定制，特点：
      1. 结合搜狗输入法的输入习惯
      2. 默认开启 emoji 表情支持
      3. 加上很多特殊符号的输入支持
      4. 繁简切换支持
      5. 许多智能纠错
  dependencies:
    - melt_eng        # 英文输入，作为次翻译器挂载到拼音方案
    - radical_pinyin  # 部件拆字，反查及辅码
    - emoji  #表情
    - stroke

switches:
  - name: ascii_mode
    reset: 0
    states: [ 中, Ａ ]
  - name: emoji
    states: [ 💀, 😄 ]
    reset: 1
  - name: full_shape
    states: [ 半角, 全角 ]
    reset: 0
  - name: transcription
    states: [ 简体 , 繁体 ]
    reset: 0
  - name: ascii_punct
    states: [ "。，¥" , "．，$" ]
    reset: 0


menu:
  page_size: 8

# 输入引擎
engine:
  processors:
    - ascii_composer
    - recognizer
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - affix_segmentor@radical_reverse_lookup
    - affix_segmentor@stroke
    - abc_segmentor
    - punct_segmentor
    - fallback_segmentor

  translators:
    - punct_translator
    - script_translator
    - table_translator@custom_phrase    # 自定义短语 custom_phrase.txt
    - table_translator@melt_eng         # 英文输入
    - table_translator@cn_en            # 中英混合词汇
    - reverse_lookup_translator@radical_reverse_lookup
    - reverse_lookup_translator@stroke
    #- reverse_lookup_translator                   # 反查模块，多标签情况下去除
    - echo_translator                             # ※ 没有候选词，返回字符

  filters:
    - simplifier
    - simplifier@emoji                              # Emoji
    - simplifier@traditionalize                     # 简繁切换
    - uniquifier                                    # 去重



# 主翻译器，拼音
translator:
  dictionary: terra_pinyin
  initial_quality: 1.6
  preedit_format:              # preedit_format 影响到输入框的显示和“Shift+回车”上屏的字符
    - xform/([jqxy])v/$1u/     # 显示为 ju qu xu yu
    # - xform/([nl])v/$1ü/     # 显示为 nü lü
    # - xform/([nl])ue/$1üe/   # 显示为 nüe lüe
    - xform/([nl])v/$1v/       # 显示为 nv lv
    - xform/([nl])ue/$1ve/     # 显示为 nve lve

# 次翻译器，英文
melt_eng:
  dictionary: melt_eng     # 挂载主词库 melt_eng.dict.yaml
  enable_sentence: false   # 禁止造句
  enable_user_dict: false  # 禁用用户词典
  initial_quality: 0.7     # 初始权重
  comment_format:          # 自定义提示码
    - xform/.*//           # 清空提示码

# 中英混合词汇
cn_en:
  dictionary: ""  #主挂载词库
  user_dict: en_dicts/cn_en  # 可以修改这里，改成自己的 txt 文件
  db_class: tabledb  # stabledb只读数据库默认，无法动态调频；设为 tabledb 可以动态调频
  enable_completion: true
  enable_sentence: false
  initial_quality: 0.8  # 初始权重
  comment_format:
    - xform/^.+$//

# 自定义短语：custom_phrase.txt
custom_phrase:
  dictionary: ""   #主挂载词库
  user_dict: custom_phrase  # 可以修改这里，改成自己的 txt 文件
  db_class: tabledb        # stabledb只读数据库，无法动态调频默认；设为 tabledb 可以动态调频
  enable_completion: false  # 补全提示
  enable_sentence: false    # 禁止造句
  initial_quality: 99       # custom_phrase 的权重应该比 pinyin 和 melt_eng 大

# Emoji
emoji:
  option_name: emoji         # 对应 switches 中的 name
  opencc_config: emoji.json  # 选择要加载的 OpenCC 配置
  inherit_comment: false     # 在 corrector.lua 及反查中，emoji 的 comment 显示为空

# 简繁切换
traditionalize:
  option_name: traditionalization  # 对应 switches 中的 name
  opencc_config: s2t.json          # s2t.json | s2hk.json | s2tw.json | s2twp.json （Rime 内置配置，在程序目录可找到）
  tips: none                       # 转换提示: all 都显示 | char 仅单字显示 | none 不显示。
  tags: [ abc, number, gregorian_to_lunar ]  # 限制在对应 tag，不对其他如反查的内容做简繁转换





# 标点符号
# punctuator 下面有三个子项：
#   full_shape 全角标点映射
#   half_shape 半角标点映射
#   symbols    Rime 的预设配置是以 '/' 前缀开头输出一系列字符，自定义的 symbols_v.yaml 修改成了 'v' 开头。
punctuator:
  full_shape:
    __include: symbols_v:/full_shape 
  half_shape:
    __include: symbols_v:/half_shape 
  symbols:
    __include: symbols_v:/symbols              # 从 symbols_v.yaml 导入配置

# punctuator:
#   import_preset: symbols_v  #symbols文件里面有full_shape,half_shape,symbols 三个部分




radical_reverse_lookup:
  tag: radical_lookup
  dictionary: radical_pinyin
  enable_completion: true
  prefix: "uq"
  comment_format:
    - erase/^.*$//
  tips: 〔拆字〕

reverse_lookup:
  tags: [stroke,radical_lookup]
  overwrite_comment: false
  dictionary: terra_pinyin


stroke:
  tag: stroke
  dictionary: stroke
  enable_user_dict: false
  prefix: 'us'
  suffix: "'"
  tips: 〔笔画〕
  preedit_format:
    - xlit/hspnz/一丨丿丶乙/
  comment_format:
    - xform/([nl])v/$1ü/
    - xform ([aeiou])(ng?|r)([1234]) $1$3$2
    - xform ([aeo])([iuo])([1234]) $1$3$2
    - xform/([nljqxy])v/$1ü/
    - xform/eh[0-5]?/ê/
    - xform/([a-z]+)[0-5]/$1/



# 处理符合特定规则的输入码，如网址、反查
recognizer:
  import_preset: default  # 从 default.yaml 继承通用的
  patterns:  # 再增加方案专有的：
    url: "^(www[.]|https?:|ftp[.:]|mailto:|file:).*$|^[a-z]+[.].+$"
    email: "^[A-Za-z][-_.0-9A-Za-z]*@.*$"
    punct: "^v([0-9]|10|[A-Za-z]+)$"    # 响应 symbols_v.yaml 的 symbols，用 'v' 替换 '/'，"^/([0-9]0?|[a-z]+)$"
    stroke: "us[a-z]*'?$"
    radical_lookup: "uq[a-z]*'?$"
    uppercase: ""  # 覆写默认的 uppercase 使其可以在输入大写后，输入数字


# 从 default 继承快捷键
key_binder:
  import_preset: default  # 从 default.yaml 继承通用的
  #search: "`"             # 辅码引导符，要添加到 speller/alphabet
  # bindings:             # 也可以再增加方案专有的快捷键



speller:
  alphabet: zyxwvutsrqponmlkjihgfedcbaZYXWVUTSRQPONMLKJIHGFEDCBA
  initials: zyxwvutsrqponmlkjihgfedcba
  delimiter: " '"
  algebra:
    - xform/^r5$/er5/
    - erase/^xx$/
    - derive/^([zcs])h/$1/ # zh, ch, sh => z, c, s
    - derive/^([zcs])([^h])/$1h$2/ # z, c, s => zh, ch, sh
    - derive/([aei])n$/$1ng/ # en => eng, in => ing
    - derive/([aei])ng$/$1n/ # eng => en, ing => in
    # - derive/([iu])an$/$lan/ # ian => iang, uan => uang
    # - derive/([iu])ang$/$lan/ # iang => ian, uang => uan

    ## 简拼
    - derive/^([a-z]).+$/$1/         # 通过正则表达式提取每个拼音的首字母
    - derive/^([zcs]h).+$/$1/        # 特别处理 zh, ch, sh 的首字母简写
    - abbrev/^([a-z]).+$/$1/         # 允许使用首字母作为缩写
    # 简拼: 允许使用前两个字母作为缩写
    # - abbrev/^([a-z]{2,}).+$/$1/     # zem -> zen me -> 怎么
     ### 自动纠错
    # 有些规则对全拼简拼混输有副作用：如「x'ai 喜爱」被纠错为「xia 下」
    # zh、ch、sh
    - derive/([zcs])h(a|e|i|u|ai|ei|an|en|ou|uo|ua|un|ui|uan|uai|uang|ang|eng|ong)$/h$1$2/  # hzi → zhi
    - derive/([zcs])h([aeiu])$/$1$2h/  # zih → zhi

    # ### v u 转换
    # # 雾凇的词库严格按照正确的 u v(ü) 注音的，下面两行支持使用错误的拼音，例如 qv nue 来响应 qu nve
    - derive/^([nl])ve$/$1ue/
    - derive/^([jqxy])u/$1v/
    # 以防引入的其他词库没按照正确方式注音，也做一个转换
    - derive/^([nl])ue$/$1ve/
    - derive/^([jqxy])v/$1u/


