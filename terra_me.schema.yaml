schema:
  schema_id: terra_me
  name: "地球我的简化"
  version: '24.05.29'
  author:
    - 佛振 <chen.sst@gmail.com>
    - mintimate < @Mintimate|https://www.mintimate.cn >
  description: |
    「漢語拼音」，以符號按鍵
      * Chewing - 新酷音
      * opencc - 開放中文轉換
  dependencies:
    - stroke
    - radical_pinyin # 参考 https://github.com/mirtlecn/rime-radical-pinyin
    - melt_eng # 英文方案

switches:
  - name: ascii_mode
    reset: 0
    states: [ 中文, 英文 ]
  - name: emoji_suggestion
    states: [ "😣️","😁️"]
    reset: 0
  - name: full_shape
    states: [ 半角, 全角 ]
    reset: 0
  - name: transcription
    states: [ 简体 , 繁体 ]
    reset: 0
  - name: ascii_punct
    states: [ "。，" , "．，" ]
    reset: 0


engine:
  processors:
    - ascii_composer
    - recognizer
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - affix_segmentor@radical_reverse_lookup
    - affix_segmentor@stroke
    - abc_segmentor
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    - table_translator@custom_phrase
    - table_translator@melt_eng           # 英文输入（作为子翻译器，优先级需要比原生的低）
    - table_translator@cn_en                             # 中英混合词汇　
    - reverse_lookup_translator@radical_reverse_lookup
    - reverse_lookup_translator@stroke
    - script_translator
  filters:
    - simplifier@emoji_suggestion         # Emoji OpenCC
    - simplifier@transcription_cc         # 繁体&简体 OpenCC
    - uniquifier                          # 去重
    - simplifier


# 简繁切换
transcription_cc:
  option_name: transcription
  opencc_config: s2t.json             # s2t.json | s2hk.json | s2tw.json | s2twp.json
  tips: none                          # 转换提示: all 都显示 | char 仅单字显示 | none 不显示。
  excluded_types: [ reverse_lookup ]  # 不转换反查（两分拼字）的内容

# Emoji模块
emoji_suggestion:
  opencc_config: emoji.json
  option_name: emoji_suggestion
  tips: all
  inherit_comment: false




speller:
  alphabet: zyxwvutsrqponmlkjihgfedcbaZYXWVUTSRQPONMLKJIHGFEDCBA
  initials: zyxwvutsrqponmlkjihgfedcba
  delimiter: " '"
  algebra:
    - erase/^xx$/ # 首选保留
    - derive/^([zcs])h/$1/ # zh, ch, sh => z, c, s
    - derive/^([zcs])([^h])/$1h$2/ # z, c, s => zh, ch, sh
    - derive/([aei])n$/$1ng/ # en => eng, in => ing
    - derive/([aei])ng$/$1n/ # eng => en, ing => in
    # - derive/([iu])an$/$lan/ # ian => iang, uan => uang
    # - derive/([iu])ang$/$lan/ # iang => ian, uang => uan
    #- derive/([aeiou])ng$/$1gn/        # dagn => dang
    #- derive/([dtngkhrzcs])o(u|ng)$/$1o/  # zho => zhong|zhou
    #- derive/ong$/on/                  # zhonguo => zhong guo
    #- derive/un$/ong/                  # yuntong = yongtong
    ## 简拼
    - derive/^([a-z]).+$/$1/         # 通过正则表达式提取每个拼音的首字母
    - derive/^([zcs]h).+$/$1/        # 特别处理 zh, ch, sh 的首字母简写
    - abbrev/^([a-z]).+$/$1/         # 允许使用首字母作为缩写
    # 简拼: 允许使用前两个字母作为缩写
    # - abbrev/^([a-z]{2,}).+$/$1/     # zem -> zen me -> 怎么
     ### 自动纠错
    # 有些规则对全拼简拼混输有副作用：如「x'ai 喜爱」被纠错为「xia 下」
    # zh、ch、sh
    - derive/([zcs])h(a|e|i|u|ai|ei|an|en|ou|uo|ua|un|ui|uan|uai|uang|ang|eng|ong)$/h$1$2/  # hzi → zhi
    - derive/([zcs])h([aeiu])$/$1$2h/  # zih → zhi
    ### v u 转换
    # 雾凇的词库严格按照正确的 u v(ü) 注音的，支持使用 qu/qv nue/nve 来输入 qu nve
    - derive/^([nl])ve$/$1ue/
    - derive/^([jqxy])u/$1v/
    # 以防引入的其他词库没按照正确方式注音，也做一个转换
    - derive/^([nl])ue$/$1ve/
    - derive/^([jqxy])v/$1u/


translator:
  dictionary: terra_pinyin
  initial_quality: 1.8
  preedit_format:
    - xform/([nl])v/$1ü/
    - xform/([nl])ue/$1üe/
    - xform/([jqxy])v/$1u/
  enable_user_dict: true         # 开启用户词典，根据用户输入调频（默认开启，此处再次声明）

custom_phrase:
  dictionary: ""
  user_dict: custom_phrase
  db_class: stabledb
  enable_completion: false
  enable_sentence: false
  initial_quality: 99

melt_eng:
  dictionary: melt_eng           # 英文词典
  enable_sentence: false         # 关闭自动造句
  enable_completion: false       # 关闭自动提示
  initial_quality: 0.8


cn_en:
  dictionary: ""                 # 中英混输，直接使用短语词典，普通字典直接留空即可
  user_dict: en_dicts/cn_en
  db_class: stabledb
  enable_completion: false
  enable_sentence: false
  initial_quality: 0.5
  comment_format:
    - xform/^.+$//


stroke:
  tag: stroke
  dictionary: stroke
  enable_user_dict: false
  prefix: 'us'
  suffix: "'"
  tips: 〔笔画〕
  preedit_format:
    - xlit/hspnz/一丨丿丶乙/
  comment_format:
    - xform/([nl])v/$1ü/
    - xform ([aeiou])(ng?|r)([1234]) $1$3$2
    - xform ([aeo])([iuo])([1234]) $1$3$2
    - xform/([nljqxy])v/$1ü/
    - xform/eh[0-5]?/ê/
    - xform/([a-z]+)[0-5]/$1/

radical_reverse_lookup:
  tag: radical_lookup
  dictionary: radical_pinyin
  enable_completion: true
  prefix: "uy"
  preedit_format:
    - xform/([nljqxy])v/$1ü/
  comment_format:
    - xform/([nljqxy])v/$1ü/
    - xform ([aeiou])(ng?|r)([1234]) $1$3$2
    - xform ([aeo])([iuo])([1234]) $1$3$2
    - xform/([nljqxy])v/$1ü/
    - xform/eh[0-5]?/ê/
    - xform/([a-z]+)[0-5]/$1/
  tips: 〔拆字〕


reverse_lookup:
  tags: [stroke,radical_lookup]
  overwrite_comment: false
  dictionary: terra_pinyin

punctuator:
  import_preset: symbols
  # 定义部分半角字符
  half_shape:
      "#": "#"
      "*": "*"
      '.' : { commit: 。 }
      "`": "`"
      "~": "~"
      "@": "@"
      "=": "="
      "/": ["/", "÷",]
      '\': "、"
      "_" : "──"
      "'": {pair: ["「", "」"]}
      "[": ["【", "["]
      "]": ["】", "]"]
      "$": ["¥", "$", "€", "£", "¢", "¤"]
      "<": ["《", "〈", "«", "<"]
      ">": ["》", "〉", "»", ">"]

recognizer:
  import_preset: default
  patterns:
    url: "^[a-z]+[.].+$"
    punct: "^/([0-9]0?|[a-z]+)$"
    stroke: "us[a-z]*'?$"
    radical_lookup: "uy[a-z]*'?$"
    uppercase: ""  # 覆写默认的 uppercase 使其可以在输入大写后，输入数字
key_binder:
  import_preset: default

menu:
  # 候选词个数
  page_size: 8